;; файл с организация-независимых макросов
;; макрос записи сообщения в отдельный лог
[macro-Msg]
exten => s,1,TrySystem(echo "${STRFTIME(${EPOCH},,%Y.%m.%d-%H:%M:%S)}	${ARG1}" >> ${Logfile})



;; макрос записи разовора в файл
[macro-RecordCall] ;; <record-suffix> <org_name>
exten => s,1,NoOp(Record call for org ${ARG2}:${RecordCalls_${ARG2}})
same => n,GotoIf($[ foo${RecordCalls_${ARG2}} = foo ]?Skip)
same => n,Set(__CallArrivedAt=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
same => n,Set(__Recordfile=/home/record/${ARG2}/_current/${CallArrivedAt}-${CALLERID(num)}-${ARG1})
same => n,Set(__MONITOR_EXEC=/home/record/endrec.sh ${Recordfile})
same => n,Monitor(wav,${Recordfile},m)
same => n(Skip),NoOp()



;; макрос для попытки дозвониться до пира через основной сервер, если он недоступен, то вызвать через резервный
;;первый параметр - номер телефона
;;второй - удаленный транк, именно имя транка, чтобы мы могли опросить его статус (транк должен быть настроен на мониторинг)
;;третий - резервный транк, также имя транка, или local, если резервный путь - локальный сервер
;;четвертый - префикс организации (нужно только для локального вызова)
;;в таком формате можно передать локальный сервер как резервный: SIP
[macro-FailoverCall] ;;<Phone_num> <Primary_server> <Failover path> //543 ast-chel SIP/mkh-asterisk
exten => s,1,GotoIf( $[ "${SIPPEER(${ARG2},status):0:2}" != "OK" ] ?Backup)
same => n,Dial(SIP/${ARG2}/${ARG1},${DialTime},${DialOpts})
same => n,Hangup
same => n(Backup),NoOp(Primary server ${ARG2} unreachable: Using ${ARG3} instead)
same => n,GotoIf( $[ "${ARG2}" == "local" ] ?local)
same => n(remote),Dial(SIP/${ARG3}/${ARG1},${DialTime},${DialOpts})
same => n,Hangup
same => n(local),Macro(Dial-Local(${ARG3}/${ARG1},${DialTime},${DialOpts})
same => n,Hangup



;;макрос подмены АОН для локального номера
[macro-CallerIDSubst] ;;<db_index>
;есть подмена CallerID в БД?
exten => s,1,NoOp(Searching for CallerID substitution)
same => n,GotoIf($[${DB_EXISTS(CallerID/${ARG1})} != 1]?return)
same => n,Set(CALLERID(num)=${DB(CallerID/${ARG1})})
same => n(return),NoOp



;;макрос начала вызова
;;пока только логирование начала вызова и подмена CallerID
[macro-newCall];; <org1> <Callee>
exten => s,1,NoOp(New call in ${ARG1}: ${CALLERID(num)} -> ${ARG2})
same => n,Macro(CallerIDSubst,${ARG1}_${CALLERID(num)})



;;макрос вызова локального номера (прям того который прям на этом сервере и может быть вызван через SIP/Num)
[macro-Dial-Local] ;; <callee_number> <org_index>
exten => s,1,Macro(Msg,Dial internal: ${CALLERID(num)} -> ${ARG1})

;есть подмена CallerID
same => n,Macro(CallerIDSubst,${ARG2}_${CALLERID(num)})

;есть дублер (номер на котороый вызов должен продублироваться)?
same => n,GotoIf($[${DB_EXISTS(Dubler/${ARG2}_${ARG1})} != 1]?DialSingle)

;выставляем задержку вызова дублера на 0
same => n,Set(Delay=00)

;если сам СИП номер не присутствует онлайн, то задержку не увеличиваем
same => n,GotoIf( $[ "${SIPPEER(${ARG1},status):0:2}" != "OK" ] ?DialDupe)

;СИП номер присутствует - задержка дублера может быть не 0, ищем в БД
same => n,GotoIf($[${DB_EXISTS(DubDelay/${ARG2}_${ARG1})} != 1] ?DialDupe)
same => n,Set(Delay=${DB(DubDelay/${ARG2}_${ARG1})})
same => n(DialDupe),Dial(SIP/${ARG1}&Local/500${Delay}${DB(Dubler/${ARG2}_${ARG1})}@${ARG2}_service,${DialTime},${DialOpts})
same => n,Hangup()

;звоним на один номер, без дублирующих
same => n(DialSingle),Dial(SIP/${ARG1},${DialTime},${DialOpts})
same => n,Hangup()




[macro-Dial-SipTrunk]
;   ${ARG1} - Trunk;   ${ARG2} - Callee >
;; макрос вызова единичного транка
;; выставляем таймауты тонового меню (если надумаем делать переадресацию через астериск )
exten => s,1,Set(TIMEOUT(digit)=2)
exten => s,n,Set(TIMEOUT(response)=4)

;; выставляем группу чтобы ее занять (способ отметить что транк занят)
exten => s,n,Set(GROUP()=${ARG1})
exten => s,n,Dial(SIP/${ARG1}/${ARG2},${DialTime},${DialOpts})



[macro-Dial-SipPool]
;; ${ARG1} - OrgName; ${ARG2} - Callee; ${ARG3} - PoolPrefix; ${ARG4} - Pool length; ${ARG5} - reserv trunk
;; макрос вызова пула из транков (транкпрефикс1, транкпрефикс2, ... транкпрефиксN)

exten => s,1,Macro(Msg,Dial-SipPool: ${CALLERID(num)} -> ${ARG2} over pool ${ARG3}N)

;; записываем звонок если это надо
same => n,Macro(RecordCall,OUT-${ARG2},${ARG1})

;; начинаем с первого транка
same => n,Set(Num=1)
same => n(Next),Set(callchan=${ARG3}${Num})

;; по умолчанию транк безлимитный (999 линий)
same => n,Set(TrunkLimit=999)

;; но это может быть переопределено в базе данных
same => n,GotoIf($[${DB_EXISTS(TrunkLimit/${callchan})} != 1] ?TLimCheck)
same => n,Set(TrunkLimit=${DB(TrunkLimit/${callchan})})

;; проверяем не превышено ли количество линий
same => n(TLimCheck),GotoIf($[${GROUP_COUNT(${callchan})} > ${TrunkLimit}]?Busy)


;; САМ ВЫЗОВ ТУТ
same => n,Macro(Dial-SipTrunk,${callchan},${ARG2})
;; если код окончания вызова - недоступность канала, то пробуем следующий транк
same => n,GotoIf($["${DIALSTATUS}"="CHANUNAVAIL"]?Busy)
same => n,GotoIf($["${DIALSTATUS}"="CONGESTION"]?Busy)
same => n,Hangup()

same => n(Busy),Set(Num=$[ ${Num} + 1 ])
;; проверка что транки в пуле закончились
same => n,GotoIf($[ ${Num} > ${ARG4} ]?ResTrunk)
same => n,Goto(Next)

;; пытаемся вызвать резервный транк
same => n(ResTrunk),Macro(Msg,"POOLFULL:${ARG3} --> ${ARG2}")
same => n,Macro(${ARG5},${ARG1},${ARG2})
same => n,Hangup()


;;макрос записи wav файлов - сообщений
[macro-recordMessage] ;;<org> <message-name>
exten => s, 1, Playback(beep)
same => n, Playback(beep)
same => n, Record(/var/lib/asterisk/sounds/${ARG1}/${ARG2}.wav)
same => n, Wait(2)
same => n, Playback(/var/lib/asterisk/sounds/${ARG1}/${ARG2})
same => n, Hangup()

;;макрос прослушивания wav файлов - сообщений
[macro-recordMessage] ;;<org> <message-name>
exten => s, 1, Playback(/var/lib/asterisk/sounds/${ARG1}/${ARG2})
same => n, Hangup()
