#!/bin/sh
. /etc/asterisk/scripts/bash.lib.sh

require '/etc/asterisk/cluster.conf'

check_var 'keyfile' 'Need root key file for remote servers here'
check_var 'srvlist' 'Please fill it with remote servers list'
check_var 'filesync_list' 'Please fill it with file list to be synced'

command1="sip reload"
command2="dialplan reload"
command3="module reload res_phoneprov.so"

echo "Backup users.conf ... "
cp ./users.conf *.bak

while : ; do
	pass=$(genpass)
	sed "/^secret=$/{q100}" ./users.conf >/dev/null
	if [ "$?" -eq "100" ]; then
		echo "Adding secret in users.conf"
		sed -i "0,/^secret=$/s//secret=$pass/" ./users.conf
	else
		echo "All password set"
		break
	fi
done

echo Applying local configs
/usr/sbin/asterisk -rx "$command1">/dev/null
/usr/sbin/asterisk -rx "$command2">/dev/null
/usr/sbin/asterisk -rx "$command3">/dev/null
echo

for server in $srvlist; do
	echo Pushing config to $server
		rsync -r -e "ssh -i $keyfile" $filesync_list root@$server:/etc/asterisk

	echo Pushing sound files to $server
		rsync -r -e "ssh -i $keyfile" /var/lib/asterisk/sounds/ru/org1 root@$server:/var/lib/asterisk/sounds/ru
		rsync -r -e "ssh -i $keyfile" /var/lib/asterisk/sounds/en/org1 root@$server:/var/lib/asterisk/sounds/en

	echo Reloading $server''s asterisk config
		ssh -i $keyfile root@$server \
			"/usr/sbin/asterisk -rx '$command1';"\
			"/usr/sbin/asterisk -rx '$command2';"\
			"/usr/sbin/asterisk -rx '$command3'" >/dev/null

	echo DB Sync: Remove entire subtrees on remote server...
		ssh -i $keyfile root@$server \
		'/usr/sbin/asterisk -rx "database deltree CallerID";'\
		'/usr/sbin/asterisk -rx "database deltree Dubler";'\
		'/usr/sbin/asterisk -rx "database deltree DubDelay"' >/dev/null

	echo DB Sync: Pushing current data trees to remote server ...
		(/usr/sbin/asterisk -rx "database show CallerID";
		 /usr/sbin/asterisk -rx "database show Dubler";
	 	/usr/sbin/asterisk -rx "database show DubDelay")|
		ssh -i $keyfile root@$server \
		"perl -e 'while(<STDIN>){"\
		"system(\"/usr/sbin/asterisk\", \"-rx\", \"database put \$1 \$2 \$3\")"\
		"if \$_ =~ m|[/]([^\s]+)[/]([^\s/]+)\s+:\s*(.+)|;}'" >/dev/null

	echo $server done.
	echo

done
