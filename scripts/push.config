#!/bin/sh
#подключаем общую библиотеку
. /etc/asterisk/scripts/bash.lib.sh

echo "Backup users.conf ... "
users_conf=/etc/asterisk/users.conf
backup_file $users_conf

#проверяем что в каждой секции установлен пароль
#выдергиваем все имена незакомментированных секций, кроме тех, что с (!) - шаблоны т.е.
sections=`cat ./users.conf | grep -v '^;' | egrep '^\[\w+\]' | egrep -v '^\[\w+\]\(!\)' | sed -E 's/\[(\w+)\](\(.*\))?/\1/'`

for sec in $sections; do
	secret=null
	ini_parser "users.conf.bak" $sec
	#echo "$callerid : $secret"
	#echo $secret
	if [ "$secret" = "null" ]; then
		echo "$sec($callerid) - no passwd key exist! (adding)"
		sed -i "/\[$sec\]/a\secret=" $users_conf
	fi
done


#проверяем что в файле нет пустых паролей
paswds_set=0
while : ; do
	#кладем в переменную генеренный пароль
	pass=$(genpass)

	#ищем пустые пароли в файле
	sed "/^secret=$/{q100}" $users_conf >/dev/null
	if [ "$?" -eq "100" ]; then
		#нашли - пробуем вписать туда генереный пароль
		if sed -i "0,/^secret=$/s//secret=$pass/" $users_conf ;then
			#увеличиваем счетчик внесенных изменений
			paswds_set=$(( $paswds_set + 1 ))
		else
			#something goes terribly wrong
			stop "Can't sed users.conf! Check fs problems please."
		fi
	else
		#пустых паролей нет
		echo "Password check OK. ($paswds_set passwords added)"
		break
	fi
done

#делаем список хинтов
cat ./users.conf | grep -v '^;' | egrep '^\[[[:digit:]]{3,4}\]' | cut -d'(' -f1 | tr -d '[]' | awk '{print "exten => " $1 ",hint,SIP/" $1}' > exten.priv.hint.conf


#подключаем конфиг
require '/etc/asterisk/cluster.conf'

#проверяем выставлены ли обязательные переменные в конфиге
check_var 'keyfile' 'Need root key file for remote servers here'
check_var 'srvlist' 'Please fill it with remote servers list'
check_var 'filesync_list' 'Please fill it with file list to be synced'

#типоавые комманды перезагрузки конфигурации на серверах
command1="sip reload"
command2="dialplan reload"
command3="module reload"


#перегружаем конфигурацию локального сервера
echo Applying local configs
/usr/sbin/asterisk -rx "$command1">/dev/null
/usr/sbin/asterisk -rx "$command2">/dev/null
/usr/sbin/asterisk -rx "$command3">/dev/null
echo

#теперь по удаленным
for server in $srvlist; do
	#толкаем на удаленный сервер файлы по списку из конфига (уникально для каждого кластера)
	echo Pushing config to $server
		rsync -r -e "ssh -i $keyfile" $filesync_list root@$server:/etc/asterisk

	#толкаем кастомные звуковые файлы на все удаленные сервера
	echo Pushing sound files to $server
		#rsync -r -e "ssh -i $keyfile" /var/lib/asterisk/sounds/ru/org1 root@$server:/var/lib/asterisk/sounds/ru
		#rsync -r -e "ssh -i $keyfile" /var/lib/asterisk/sounds/en/org1 root@$server:/var/lib/asterisk/sounds/en

	#толкаем кастомные звуковые файлы на все удаленные сервера
	echo Pushing provisioning files to $server
		#rsync -r -e "ssh -i $keyfile" /var/lib/asterisk/phoneprov root@$server:/var/lib/asterisk

	#перезагружаем конфигурацию удаленного сервера
	echo Reloading $server''s asterisk config
		ssh -i $keyfile root@$server \
			"/usr/sbin/asterisk -rx '$command1';"\
			"/usr/sbin/asterisk -rx '$command2';"\
			"/usr/sbin/asterisk -rx '$command3'" >/dev/null

	#пушим нашу БД на удаленный сервер: удаляем деревья настроек
	echo DB Sync: Remove entire subtrees on remote server...
		ssh -i $keyfile root@$server \
		'/usr/sbin/asterisk -rx "database deltree CallerID";'\
		'/usr/sbin/asterisk -rx "database deltree CallLimit";'\
		'/usr/sbin/asterisk -rx "database deltree Dubler";'\
		'/usr/sbin/asterisk -rx "database deltree DubDelay"' >/dev/null

	#пушим нашу БД на удаленный сервер: пушим наши деревья на удаленный сервер
	echo DB Sync: Pushing current data trees to remote server ...
		(/usr/sbin/asterisk -rx "database show CallerID";
		 /usr/sbin/asterisk -rx "database show CallLimit";
		 /usr/sbin/asterisk -rx "database show Dubler";
	 	/usr/sbin/asterisk -rx "database show DubDelay")|
		ssh -i $keyfile root@$server \
		"perl -e 'while(<STDIN>){"\
		"system(\"/usr/sbin/asterisk\", \"-rx\", \"database put \$1 \$2 \$3\")"\
		"if \$_ =~ m|[/]([^\s]+)[/]([^\s/]+)\s+:\s*(.+)|;}'" >/dev/null

	echo $server done.
	echo

done
